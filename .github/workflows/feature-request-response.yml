name: Feature Request Responder
on:
  issues:
    types: [opened]

permissions:
  contents: read
  issues: read
  models: read

jobs:
  feature-request-check:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Issue
        id: fetch-issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue.number
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number
            })
            core.setOutput('title', issue.data.title)
            core.setOutput('body', issue.data.body)

      - name: Analyze Issue
        if: contains(join(github.event.issue.labels.*.name, ','), 'feature-request')
        id: analyze-issue
        uses: actions/ai-inference@v1
        with:
          model: mistral-ai/ministral-3b
          system-prompt: |
            You are an assistant that looks at newly-opened feature requests to ensure they are both viable and contain enough information. You should always ensure there is a motivation, use case, alternative approaches considered, and acceptance criteria. If any are missing, respond with a polite message to the author to ask for missing information. Consider the following issue title and body
          prompt: |
            Title: ${{ steps.extract.outputs.title }}
            Body: ${{ steps.extract.outputs.body }}
          
      - name: Comment On Issue
        if: contains(join(github.event.issue.labels.*.name, ','), 'feature-request')
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue.number
            const ai_response = `${{ steps.analyze-issue.outputs.result }}`
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body: ai_response
            })
